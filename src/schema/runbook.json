{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "JSON Schema for Automatiqal runbook files",
    "description": "Automatiqal JSON schema (@informatiqal)",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "name": {
            "description": "Name of the runbook",
            "type": "string"
        },
        "description": {
            "type": "string",
            "description": "Free text runbook description"
        },
        "edition": {
            "description": "Target Qlik Sense environment type - windows or saas. Default is \"windows\"",
            "type": "string",
            "enum": [
                "windows",
                "saas"
            ]
        },
        "trace": {
            "description": "Trace levels",
            "type": "string",
            "enum": [
                "error",
                "debug"
            ]
        },
        "environment": {
            "type": "object",
            "description": "Define the Qlik environment details (host, port, authentication etc.)",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Qlik Sense host name"
                },
                "port": {
                    "type": "integer",
                    "description": "Repository port (default 4242)",
                    "default": 4242
                },
                "authentication": {
                    "type": "object",
                    "description": "Authentication information (certificates, jwt etc.)",
                    "properties": {
                        "cert": {
                            "type": "string",
                            "description": "Full path to certificate (cert.pem)\nc:\\path\\to\\cert.pem\nc:\\path\\to\\some-cert.pem",
                            "examples": [
                                "c:\\path\\to\\cert.pem",
                                "c:\\path\\to\\some-cert.pem"
                            ]
                        },
                        "key": {
                            "type": "string",
                            "description": "Full path to certificate key (cert_key.pem)",
                            "examples": [
                                "c:\\path\\to\\cert_key.pem",
                                "c:\\path\\to\\key.pem"
                            ]
                        },
                        "user_dir": {
                            "type": "string"
                        },
                        "user_name": {
                            "type": "string"
                        }
                    }
                }
            },
            "required": [
                "host",
                "authentication"
            ]
        },
        "tasks": {
            "type": "array",
            "description": "List of tasks to be executed in sequence",
            "minItems": 1,
            "items": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/app.copy"
                    },
                    {
                        "$ref": "#/definitions/app.export"
                    },
                    {
                        "$ref": "#/definitions/app.exportMany"
                    },
                    {
                        "$ref": "#/definitions/app.get"
                    },
                    {
                        "$ref": "#/definitions/app.getAll"
                    },
                    {
                        "$ref": "#/definitions/app.publish"
                    },
                    {
                        "$ref": "#/definitions/app.remove"
                    },
                    {
                        "$ref": "#/definitions/app.switch"
                    },
                    {
                        "$ref": "#/definitions/app.update"
                    },
                    {
                        "$ref": "#/definitions/app.upload"
                    },
                    {
                        "$ref": "#/definitions/app.uploadAndReplace"
                    },
                    {
                        "$ref": "#/definitions/certificate.distributionPathGet"
                    },
                    {
                        "$ref": "#/definitions/certificate.generate"
                    },
                    {
                        "$ref": "#/definitions/compositeTrigger.create"
                    },
                    {
                        "$ref": "#/definitions/compositeTrigger.update"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.create"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.exportMany"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.get"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.getAll"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.importFile"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.importFileMany"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.remove"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.removeFile"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.removeFileMany"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.update"
                    },
                    {
                        "$ref": "#/definitions/customProperty.create"
                    },
                    {
                        "$ref": "#/definitions/customProperty.get"
                    },
                    {
                        "$ref": "#/definitions/customProperty.remove"
                    },
                    {
                        "$ref": "#/definitions/customProperty.update"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.create"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.get"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.getAll"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.remove"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.update"
                    },
                    {
                        "$ref": "#/definitions/extension.get"
                    },
                    {
                        "$ref": "#/definitions/extension.getAll"
                    },
                    {
                        "$ref": "#/definitions/extension.import"
                    },
                    {
                        "$ref": "#/definitions/extension.remove"
                    },
                    {
                        "$ref": "#/definitions/extension.update"
                    },
                    {
                        "$ref": "#/definitions/externalTask.addTriggerMany"
                    },
                    {
                        "$ref": "#/definitions/externalTask.addTriggerSchema"
                    },
                    {
                        "$ref": "#/definitions/externalTask.create"
                    },
                    {
                        "$ref": "#/definitions/externalTask.get"
                    },
                    {
                        "$ref": "#/definitions/externalTask.getAll"
                    },
                    {
                        "$ref": "#/definitions/externalTask.remove"
                    },
                    {
                        "$ref": "#/definitions/externalTask.update"
                    },
                    {
                        "$ref": "#/definitions/node.get"
                    },
                    {
                        "$ref": "#/definitions/node.getAll"
                    },
                    {
                        "$ref": "#/definitions/compositeTrigger.remove"
                    },
                    {
                        "$ref": "#/definitions/proxy.update"
                    },
                    {
                        "$ref": "#/definitions/reloadTask.addTriggerComposite"
                    },
                    {
                        "$ref": "#/definitions/reloadTask.addTriggerMany"
                    },
                    {
                        "$ref": "#/definitions/reloadTask.addTriggerSchema"
                    },
                    {
                        "$ref": "#/definitions/reloadTask.create"
                    },
                    {
                        "$ref": "#/definitions/reloadTask.remove"
                    },
                    {
                        "$ref": "#/definitions/reloadTask.update"
                    },
                    {
                        "$ref": "#/definitions/serviceStatus.get"
                    },
                    {
                        "$ref": "#/definitions/stream.create"
                    },
                    {
                        "$ref": "#/definitions/stream.get"
                    },
                    {
                        "$ref": "#/definitions/stream.remove"
                    },
                    {
                        "$ref": "#/definitions/stream.update"
                    },
                    {
                        "$ref": "#/definitions/systemRule.create"
                    },
                    {
                        "$ref": "#/definitions/systemRule.getAll"
                    },
                    {
                        "$ref": "#/definitions/systemRule"
                    },
                    {
                        "$ref": "#/definitions/systemRule.licenseCreate"
                    },
                    {
                        "$ref": "#/definitions/systemRule.remove"
                    },
                    {
                        "$ref": "#/definitions/systemRule.update"
                    },
                    {
                        "$ref": "#/definitions/tag.create"
                    },
                    {
                        "$ref": "#/definitions/tag.createMany"
                    },
                    {
                        "$ref": "#/definitions/tag.remove"
                    },
                    {
                        "$ref": "#/definitions/tag.update"
                    },
                    {
                        "$ref": "#/definitions/task.get"
                    },
                    {
                        "$ref": "#/definitions/task.getAll"
                    },
                    {
                        "$ref": "#/definitions/task.start"
                    },
                    {
                        "$ref": "#/definitions/task.startSynchronous"
                    },
                    {
                        "$ref": "#/definitions/task.stop"
                    },
                    {
                        "$ref": "#/definitions/user.create"
                    },
                    {
                        "$ref": "#/definitions/user.get"
                    },
                    {
                        "$ref": "#/definitions/user.getAll"
                    },
                    {
                        "$ref": "#/definitions/user.remove"
                    },
                    {
                        "$ref": "#/definitions/user.update"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.create"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.get"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.getAll"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.remove"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.update"
                    }
                ]
            }
        }
    },
    "required": [
        "name",
        "environment",
        "tasks"
    ],
    "definitions": {
        "app.copy": {
            "type": "object",
            "description": "Duplicate app/apps",
            "properties": {
                "name": {
                    "type": "string",
                    "pattern": "^[^#]+$"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.copy"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the apps to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "App new name"
                        },
                        "includeCustomProperties": {
                            "type": "boolean",
                            "description": "Copy the custom properties as well"
                        }
                    }
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "app.export": {
            "type": "object",
            "description": "Export app/apps",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.export"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "description": "Filter to apply to retrieve the apps to update",
                    "type": "string"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "token": {
                            "type": "string",
                            "description": "App new name"
                        },
                        "skipData": {
                            "type": "boolean",
                            "description": "Export without data"
                        }
                    }
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "app.exportMany": {
            "type": "object",
            "description": "Export apps",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.exportMany"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "description": "Filter to apply to retrieve the apps to update",
                    "type": "string"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "skipData": {
                            "type": "boolean",
                            "description": "Export without data"
                        }
                    }
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "app.get": {
            "type": "object",
            "description": "Get instance of app/apps",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "app.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "app.getAll": {
            "type": "object",
            "description": "Get instance of all apps",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "app.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "app.publish": {
            "type": "object",
            "description": "Publish app/apps to stream",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.publish"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the apps to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the app after is published"
                        },
                        "stream": {
                            "type": "string",
                            "description": "Name of the stream where the app will be published"
                        }
                    },
                    "required": [
                        "stream"
                    ]
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "app.remove": {
            "type": "object",
            "description": "Remove app/apps",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the apps to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "app.switch": {
            "type": "object",
            "description": "Publish an app by overwriting existing app",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "app.switch"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "targetAppId": {
                            "type": "string",
                            "description": "Target app id"
                        }
                    },
                    "required": [
                        "targetAppId"
                    ]
                }
            }
        },
        "app.update": {
            "type": "object",
            "description": "Update app/apps properties",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the apps to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "app.upload": {
            "type": "object",
            "description": "Upload brand new app (qvf)",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.upload"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "file",
                        "name"
                    ],
                    "properties": {
                        "file": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "app.uploadAndReplace": {
            "type": "object",
            "description": "Upload new app and replace existing app",
            "required": [
                "name",
                "file",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "app.switch"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "targetAppId": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "targetAppId"
                    ]
                }
            }
        },
        "certificate.distributionPathGet": {
            "type": "object",
            "description": "Get distribution certificate path",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "certificate.distributionPathGet"
                    ]
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "certificate.generate": {
            "type": "object",
            "description": "Generate new set of certificates",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "certificate.generate"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "machineNames": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "certificatePassword": {
                            "type": "string"
                        },
                        "includeSecretsKey": {
                            "type": "boolean"
                        },
                        "includeCa": {
                            "type": "boolean"
                        },
                        "exportFormat": {
                            "type": "string",
                            "enum": [
                                "Windows",
                                "Pem"
                            ]
                        }
                    },
                    "required": [
                        "machineNames"
                    ]
                },
                "skip": {
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ]
        },
        "compositeTrigger.create": {
            "type": "object",
            "description": "Create new composite trigger",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "compositeTrigger.create"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "eventTasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string",
                                        "enum": [
                                            "success",
                                            "fail"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ]
        },
        "compositeTrigger.update": {
            "type": "object",
            "description": "Update composite trigger(s) properties",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "compositeTrigger.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "eventTasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string",
                                        "enum": [
                                            "success",
                                            "fail"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the entities(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "contentLibrary.create": {
            "type": "object",
            "description": "Create new content library",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "contentLibrary.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "contentLibrary.exportMany": {
            "type": "object",
            "description": "Export multiple files from content library",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.exportMany"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "files"
                    ],
                    "properties": {
                        "files": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "sourceFileName": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the content library"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "contentLibrary.get": {
            "type": "object",
            "description": "Get instance of content library/libraries",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "contentLibrary.getAll": {
            "type": "object",
            "description": "Get instance of all content libraries",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "contentLibrary.importFile": {
            "type": "object",
            "description": "Import file for content library",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.importFile"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "file",
                        "externalPath"
                    ],
                    "properties": {
                        "file": {
                            "type": "string"
                        },
                        "externalPath": {
                            "type": "string"
                        },
                        "overwrite": {
                            "type": "boolean"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the content library"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "contentLibrary.importFileMany": {
            "type": "object",
            "description": "Import multiple files for content library",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.importFileMany"
                    ]
                },
                "details": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "file",
                            "externalPath"
                        ],
                        "properties": {
                            "file": {
                                "type": "string"
                            },
                            "externalPath": {
                                "type": "string"
                            },
                            "overwrite": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the content library"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "contentLibrary.remove": {
            "type": "object",
            "description": "Remove content library/libraries",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "contentLibrary.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to retrieve the content libraries to remove"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "contentLibrary.removeFile": {
            "type": "object",
            "description": "Remove file from content library",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.removeFile"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "externalPath"
                    ],
                    "properties": {
                        "externalPath": {
                            "type": "string"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the content library"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "contentLibrary.removeFileMany": {
            "type": "object",
            "description": "Remove multiple files from content library",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.removeFileMany"
                    ]
                },
                "details": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the content library"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "contentLibrary.update": {
            "type": "object",
            "description": "Update content library/libraries properties",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "contentLibrary.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "customPropertyOperations": {
                            "type": "string",
                            "enum": [
                                "add",
                                "remove",
                                "set"
                            ]
                        },
                        "tagOperations": {
                            "type": "string",
                            "enum": [
                                "add",
                                "remove",
                                "set"
                            ]
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the user(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "customProperty.create": {
            "type": "object",
            "description": "Create new custom property",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "customProperty.create"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "choiceValues": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "objectTypes": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "App",
                                    "AnalyticConnection",
                                    "ContentLibrary",
                                    "DataConnection",
                                    "EngineService",
                                    "Extension",
                                    "ExternalProgramTask",
                                    "ServerNodeConfiguration",
                                    "PrintingService",
                                    "ProxyService",
                                    "ReloadTask",
                                    "RepositoryService",
                                    "SchedulerService",
                                    "Stream",
                                    "UserSyncTask",
                                    "User",
                                    "VirtualProxyConfig"
                                ]
                            }
                        },
                        "valueType": {
                            "type": "string"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "customProperty.get": {
            "type": "object",
            "description": "Get instance of custom property(ies)",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "customProperty.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "customProperty.remove": {
            "type": "object",
            "description": "Remove custom property(ies)",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "customProperty.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the custom property"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "customProperty.update": {
            "type": "object",
            "description": "Update custom property(ies) properties",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "customProperty.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "choiceValues": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "objectTypes": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "App",
                                    "AnalyticConnection",
                                    "ContentLibrary",
                                    "DataConnection",
                                    "EngineService",
                                    "Extension",
                                    "ExternalProgramTask",
                                    "ServerNodeConfiguration",
                                    "PrintingService",
                                    "ProxyService",
                                    "ReloadTask",
                                    "RepositoryService",
                                    "SchedulerService",
                                    "Stream",
                                    "UserSyncTask",
                                    "User",
                                    "VirtualProxyConfig"
                                ]
                            }
                        },
                        "valueType": {
                            "type": "string"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the custom property to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "dataConnection.create": {
            "type": "object",
            "description": "Create new data connection",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "dataConnection.create"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "connectionString"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "connectionString": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "architecture": {
                            "type": "string",
                            "enum": [
                                "x86",
                                "x64",
                                "Undefined"
                            ]
                        },
                        "logOn": {
                            "type": "string",
                            "enum": [
                                "Current user",
                                "Service user"
                            ]
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "dataConnection.get": {
            "type": "object",
            "description": "Get instance of data connection/s",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "dataConnection.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "dataConnection.getAll": {
            "type": "object",
            "description": "Get instance of all data connections",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "dataConnection.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "dataConnection.remove": {
            "type": "object",
            "description": "Remove data connection(s)",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "dataConnection.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the apps to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "dataConnection.update": {
            "type": "object",
            "description": "Update data connection/connections properties",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "dataConnection.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "connectionString": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "customPropertyOperations": {
                            "type": "string",
                            "enum": [
                                "add",
                                "remove",
                                "set"
                            ]
                        },
                        "tagOperations": {
                            "type": "string",
                            "enum": [
                                "add",
                                "remove",
                                "set"
                            ]
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the data connection/s to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "extension.get": {
            "type": "object",
            "description": "Get instance of extension/extensions",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "extension.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "extension.getAll": {
            "type": "object",
            "description": "Get instance of all extensions",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "extension.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "extension.import": {
            "type": "object",
            "description": "Import new extension",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "extension.import"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "file"
                    ],
                    "properties": {
                        "file": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "extension.remove": {
            "type": "object",
            "description": "Remove extension/extensions",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "extension.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the extensions to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "extension.update": {
            "type": "object",
            "description": "Update extension(s) properties",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "extension.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Value in format: CustomPropertyName=value"
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the extension(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "externalTask.addTriggerMany": {
            "type": "object",
            "description": "Add triggers to external task",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "externalTask.addTriggerMany"
                    ]
                },
                "details": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "eventTasks": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success",
                                                        "fail"
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "type": "object",
                                "required": [
                                    "name",
                                    "repeat"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "repeat": {
                                        "type": "string",
                                        "enum": [
                                            "Once",
                                            "Minute",
                                            "Hourly",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ]
                                    },
                                    "repeatEvery": {
                                        "type": "integer"
                                    },
                                    "startDate": {
                                        "type": "string"
                                    },
                                    "expirationDate": {
                                        "type": "string"
                                    },
                                    "daysOfWeek": {
                                        "type": "string",
                                        "enum": [
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday",
                                            "Sunday"
                                        ]
                                    },
                                    "daysOfMonth": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3,
                                            4,
                                            5,
                                            6,
                                            7,
                                            8,
                                            9,
                                            10,
                                            11,
                                            12,
                                            13,
                                            14,
                                            15,
                                            16,
                                            17,
                                            18,
                                            19,
                                            20,
                                            21,
                                            22,
                                            23,
                                            24,
                                            25,
                                            26,
                                            27,
                                            28,
                                            29,
                                            30,
                                            31
                                        ]
                                    },
                                    "timeZone": {
                                        "type": "string",
                                        "enum": [
                                            "Pacific/Honolulu",
                                            "America/Anchorage",
                                            "America/Los_Angeles",
                                            "America/Denver",
                                            "America/Mazatlan",
                                            "America/Phoenix",
                                            "America/Belize",
                                            "America/Chicago",
                                            "America/Mexico_City",
                                            "America/Regina",
                                            "America/Bogota",
                                            "America/Indianapolis",
                                            "America/New_York",
                                            "America/Caracas",
                                            "America/Halifax",
                                            "America/St_Johns",
                                            "America/Buenos_Aires",
                                            "America/Godthab",
                                            "America/Santiago",
                                            "America/Sao_Paulo",
                                            "Atlantic/South_Georgia",
                                            "Atlantic/Azores",
                                            "Atlantic/Cape_Verde",
                                            "UTC",
                                            "Atlantic/Reykjavik",
                                            "Africa/Casablanca",
                                            "Europe/Dublin",
                                            "Europe/Belgrade",
                                            "Europe/Paris",
                                            "Europe/Warsaw",
                                            "Africa/Cairo",
                                            "Africa/Harare",
                                            "Asia/Jerusalem",
                                            "Europe/Athens",
                                            "Europe/Bucharest",
                                            "Europe/Helsinki",
                                            "Africa/Nairobi",
                                            "Asia/Baghdad",
                                            "Asia/Kuwait",
                                            "Europe/Minsk",
                                            "Europe/Moscow",
                                            "Asia/Tehran",
                                            "Asia/Baku",
                                            "Asia/Muscat",
                                            "Asia/Kabul",
                                            "Asia/Karachi",
                                            "Asia/Yekaterinburg",
                                            "Asia/Calcutta",
                                            "Asia/Colombo",
                                            "Asia/Katmandu",
                                            "Asia/Almaty",
                                            "Asia/Dhaka",
                                            "Asia/Rangoon",
                                            "Asia/Bangkok",
                                            "Asia/Krasnoyarsk",
                                            "Asia/Hong_Kong",
                                            "Asia/Irkutsk",
                                            "Asia/Kuala_Lumpur",
                                            "Asia/Taipei",
                                            "Australia/Perth",
                                            "Asia/Seoul",
                                            "Asia/Tokyo",
                                            "Asia/Yakutsk",
                                            "Australia/Adelaide",
                                            "Australia/Darwin",
                                            "Asia/Vladivostok",
                                            "Australia/Brisbane",
                                            "Australia/Hobart",
                                            "Australia/Sydney",
                                            "Pacific/Guam",
                                            "Pacific/Noumea",
                                            "Pacific/Auckland",
                                            "Pacific/Fiji",
                                            "Pacific/Apia",
                                            "Pacific/Tongatapu"
                                        ]
                                    },
                                    "daylightSavingTime": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        ]
                    }
                },
                "skip": {
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ]
        },
        "externalTask.addTriggerSchema": {
            "type": "object",
            "description": "Add schema trigger to external task",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "externalTask.addTriggerSchema"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "repeat"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "repeat": {
                            "type": "string",
                            "enum": [
                                "Once",
                                "Minute",
                                "Hourly",
                                "Daily",
                                "Weekly",
                                "Monthly"
                            ]
                        },
                        "repeatEvery": {
                            "type": "integer"
                        },
                        "startDate": {
                            "type": "string"
                        },
                        "expirationDate": {
                            "type": "string"
                        },
                        "daysOfWeek": {
                            "type": "string",
                            "enum": [
                                "Monday",
                                "Tuesday",
                                "Wednesday",
                                "Thursday",
                                "Friday",
                                "Saturday",
                                "Sunday"
                            ]
                        },
                        "daysOfMonth": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31
                            ]
                        },
                        "timeZone": {
                            "type": "string",
                            "enum": [
                                "Pacific/Honolulu",
                                "America/Anchorage",
                                "America/Los_Angeles",
                                "America/Denver",
                                "America/Mazatlan",
                                "America/Phoenix",
                                "America/Belize",
                                "America/Chicago",
                                "America/Mexico_City",
                                "America/Regina",
                                "America/Bogota",
                                "America/Indianapolis",
                                "America/New_York",
                                "America/Caracas",
                                "America/Halifax",
                                "America/St_Johns",
                                "America/Buenos_Aires",
                                "America/Godthab",
                                "America/Santiago",
                                "America/Sao_Paulo",
                                "Atlantic/South_Georgia",
                                "Atlantic/Azores",
                                "Atlantic/Cape_Verde",
                                "UTC",
                                "Atlantic/Reykjavik",
                                "Africa/Casablanca",
                                "Europe/Dublin",
                                "Europe/Belgrade",
                                "Europe/Paris",
                                "Europe/Warsaw",
                                "Africa/Cairo",
                                "Africa/Harare",
                                "Asia/Jerusalem",
                                "Europe/Athens",
                                "Europe/Bucharest",
                                "Europe/Helsinki",
                                "Africa/Nairobi",
                                "Asia/Baghdad",
                                "Asia/Kuwait",
                                "Europe/Minsk",
                                "Europe/Moscow",
                                "Asia/Tehran",
                                "Asia/Baku",
                                "Asia/Muscat",
                                "Asia/Kabul",
                                "Asia/Karachi",
                                "Asia/Yekaterinburg",
                                "Asia/Calcutta",
                                "Asia/Colombo",
                                "Asia/Katmandu",
                                "Asia/Almaty",
                                "Asia/Dhaka",
                                "Asia/Rangoon",
                                "Asia/Bangkok",
                                "Asia/Krasnoyarsk",
                                "Asia/Hong_Kong",
                                "Asia/Irkutsk",
                                "Asia/Kuala_Lumpur",
                                "Asia/Taipei",
                                "Australia/Perth",
                                "Asia/Seoul",
                                "Asia/Tokyo",
                                "Asia/Yakutsk",
                                "Australia/Adelaide",
                                "Australia/Darwin",
                                "Asia/Vladivostok",
                                "Australia/Brisbane",
                                "Australia/Hobart",
                                "Australia/Sydney",
                                "Pacific/Guam",
                                "Pacific/Noumea",
                                "Pacific/Auckland",
                                "Pacific/Fiji",
                                "Pacific/Apia",
                                "Pacific/Tongatapu"
                            ]
                        },
                        "daylightSavingTime": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "externalTask.create": {
            "type": "object",
            "description": "Create new external task",
            "additionalProperties": false,
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "externalTask.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "name",
                        "path"
                    ],
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the external task"
                        },
                        "path": {
                            "type": "string"
                        },
                        "parameters": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "externalTask.get": {
            "type": "object",
            "description": "Get instance of external task/tasks",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "externalTask.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "externalTask.getAll": {
            "type": "object",
            "description": "Get instance of all external tasks",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "externalTask.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "externalTask.remove": {
            "type": "object",
            "description": "Remove external task/tasks",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "externalTask.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to retrieve the external tasks to remove"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "externalTask.update": {
            "type": "object",
            "description": "Update external task/tasks properties",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "externalTask.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "taskSessionTimeout": {
                            "type": "integer"
                        },
                        "maxRetries": {
                            "type": "integer"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "path": {
                            "type": "integer"
                        },
                        "parameters": {
                            "type": "integer"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "options": {
                    "$ref": "#/definitions/UpdateExtraOptions"
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the external task(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "node.get": {
            "type": "object",
            "description": "Get instance of node/nodes",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "node.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "node.getAll": {
            "type": "object",
            "description": "Get instance of all nodes",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "node.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "compositeTrigger.remove": {
            "type": "object",
            "description": "Remove composite trigger(s)",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "compositeTrigger.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the tag"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "proxy.update": {
            "type": "object",
            "description": "Update proxy service",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "proxy.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "listenPort": {
                            "type": "integer"
                        },
                        "allowHttp": {
                            "type": "boolean"
                        },
                        "unencryptedListenPort": {
                            "type": "integer"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "authenticationListenPort": {
                            "type": "integer"
                        },
                        "kerberosAuthentication": {
                            "type": "integer"
                        },
                        "unencryptedAuthenticationListenPort": {
                            "type": "integer"
                        },
                        "sslBrowserCertificateThumbprint": {
                            "type": "string"
                        },
                        "keepAliveTimeoutSeconds": {
                            "type": "integer"
                        },
                        "maxHeaderSizeBytes": {
                            "type": "integer"
                        },
                        "maxHeaderLines": {
                            "type": "integer"
                        },
                        "restListenPort": {
                            "type": "integer"
                        },
                        "virtualProxies": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the apps to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "reloadTask.addTriggerComposite": {
            "type": "object",
            "description": "Add composite trigger to reload task",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "reloadTask.addTriggerComposite"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "eventTasks"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "eventTasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "state"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "ID of the targeted reload task"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string",
                                        "enum": [
                                            "success",
                                            "fail"
                                        ]
                                    }
                                },
                                "oneOf": [
                                    {
                                        "required": [
                                            "id"
                                        ],
                                        "not": {
                                            "required": [
                                                "name"
                                            ]
                                        }
                                    },
                                    {
                                        "required": [
                                            "name"
                                        ],
                                        "not": {
                                            "required": [
                                                "idz"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "reloadTask.addTriggerMany": {
            "type": "object",
            "description": "Add triggers to reload task",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "reloadTask.addTriggerMany"
                    ]
                },
                "details": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "eventTasks": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success",
                                                        "fail"
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "type": "object",
                                "required": [
                                    "name",
                                    "repeat"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "repeat": {
                                        "type": "string",
                                        "enum": [
                                            "Once",
                                            "Minute",
                                            "Hourly",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ]
                                    },
                                    "repeatEvery": {
                                        "type": "integer"
                                    },
                                    "startDate": {
                                        "type": "string"
                                    },
                                    "expirationDate": {
                                        "type": "string"
                                    },
                                    "daysOfWeek": {
                                        "type": "string",
                                        "enum": [
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday",
                                            "Sunday"
                                        ]
                                    },
                                    "daysOfMonth": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3,
                                            4,
                                            5,
                                            6,
                                            7,
                                            8,
                                            9,
                                            10,
                                            11,
                                            12,
                                            13,
                                            14,
                                            15,
                                            16,
                                            17,
                                            18,
                                            19,
                                            20,
                                            21,
                                            22,
                                            23,
                                            24,
                                            25,
                                            26,
                                            27,
                                            28,
                                            29,
                                            30,
                                            31
                                        ]
                                    },
                                    "timeZone": {
                                        "type": "string",
                                        "enum": [
                                            "Pacific/Honolulu",
                                            "America/Anchorage",
                                            "America/Los_Angeles",
                                            "America/Denver",
                                            "America/Mazatlan",
                                            "America/Phoenix",
                                            "America/Belize",
                                            "America/Chicago",
                                            "America/Mexico_City",
                                            "America/Regina",
                                            "America/Bogota",
                                            "America/Indianapolis",
                                            "America/New_York",
                                            "America/Caracas",
                                            "America/Halifax",
                                            "America/St_Johns",
                                            "America/Buenos_Aires",
                                            "America/Godthab",
                                            "America/Santiago",
                                            "America/Sao_Paulo",
                                            "Atlantic/South_Georgia",
                                            "Atlantic/Azores",
                                            "Atlantic/Cape_Verde",
                                            "UTC",
                                            "Atlantic/Reykjavik",
                                            "Africa/Casablanca",
                                            "Europe/Dublin",
                                            "Europe/Belgrade",
                                            "Europe/Paris",
                                            "Europe/Warsaw",
                                            "Africa/Cairo",
                                            "Africa/Harare",
                                            "Asia/Jerusalem",
                                            "Europe/Athens",
                                            "Europe/Bucharest",
                                            "Europe/Helsinki",
                                            "Africa/Nairobi",
                                            "Asia/Baghdad",
                                            "Asia/Kuwait",
                                            "Europe/Minsk",
                                            "Europe/Moscow",
                                            "Asia/Tehran",
                                            "Asia/Baku",
                                            "Asia/Muscat",
                                            "Asia/Kabul",
                                            "Asia/Karachi",
                                            "Asia/Yekaterinburg",
                                            "Asia/Calcutta",
                                            "Asia/Colombo",
                                            "Asia/Katmandu",
                                            "Asia/Almaty",
                                            "Asia/Dhaka",
                                            "Asia/Rangoon",
                                            "Asia/Bangkok",
                                            "Asia/Krasnoyarsk",
                                            "Asia/Hong_Kong",
                                            "Asia/Irkutsk",
                                            "Asia/Kuala_Lumpur",
                                            "Asia/Taipei",
                                            "Australia/Perth",
                                            "Asia/Seoul",
                                            "Asia/Tokyo",
                                            "Asia/Yakutsk",
                                            "Australia/Adelaide",
                                            "Australia/Darwin",
                                            "Asia/Vladivostok",
                                            "Australia/Brisbane",
                                            "Australia/Hobart",
                                            "Australia/Sydney",
                                            "Pacific/Guam",
                                            "Pacific/Noumea",
                                            "Pacific/Auckland",
                                            "Pacific/Fiji",
                                            "Pacific/Apia",
                                            "Pacific/Tongatapu"
                                        ]
                                    },
                                    "daylightSavingTime": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        ]
                    }
                },
                "skip": {
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ]
        },
        "reloadTask.addTriggerSchema": {
            "type": "object",
            "description": "Add schema trigger to reload task",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "reloadTask.addTriggerSchema"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "repeat"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "repeat": {
                            "type": "string",
                            "enum": [
                                "Once",
                                "Minute",
                                "Hourly",
                                "Daily",
                                "Weekly",
                                "Monthly"
                            ]
                        },
                        "repeatEvery": {
                            "type": "integer"
                        },
                        "startDate": {
                            "type": "string"
                        },
                        "expirationDate": {
                            "type": "string"
                        },
                        "daysOfWeek": {
                            "type": "string",
                            "enum": [
                                "Monday",
                                "Tuesday",
                                "Wednesday",
                                "Thursday",
                                "Friday",
                                "Saturday",
                                "Sunday"
                            ]
                        },
                        "daysOfMonth": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31
                            ]
                        },
                        "timeZone": {
                            "type": "string",
                            "enum": [
                                "Pacific/Honolulu",
                                "America/Anchorage",
                                "America/Los_Angeles",
                                "America/Denver",
                                "America/Mazatlan",
                                "America/Phoenix",
                                "America/Belize",
                                "America/Chicago",
                                "America/Mexico_City",
                                "America/Regina",
                                "America/Bogota",
                                "America/Indianapolis",
                                "America/New_York",
                                "America/Caracas",
                                "America/Halifax",
                                "America/St_Johns",
                                "America/Buenos_Aires",
                                "America/Godthab",
                                "America/Santiago",
                                "America/Sao_Paulo",
                                "Atlantic/South_Georgia",
                                "Atlantic/Azores",
                                "Atlantic/Cape_Verde",
                                "UTC",
                                "Atlantic/Reykjavik",
                                "Africa/Casablanca",
                                "Europe/Dublin",
                                "Europe/Belgrade",
                                "Europe/Paris",
                                "Europe/Warsaw",
                                "Africa/Cairo",
                                "Africa/Harare",
                                "Asia/Jerusalem",
                                "Europe/Athens",
                                "Europe/Bucharest",
                                "Europe/Helsinki",
                                "Africa/Nairobi",
                                "Asia/Baghdad",
                                "Asia/Kuwait",
                                "Europe/Minsk",
                                "Europe/Moscow",
                                "Asia/Tehran",
                                "Asia/Baku",
                                "Asia/Muscat",
                                "Asia/Kabul",
                                "Asia/Karachi",
                                "Asia/Yekaterinburg",
                                "Asia/Calcutta",
                                "Asia/Colombo",
                                "Asia/Katmandu",
                                "Asia/Almaty",
                                "Asia/Dhaka",
                                "Asia/Rangoon",
                                "Asia/Bangkok",
                                "Asia/Krasnoyarsk",
                                "Asia/Hong_Kong",
                                "Asia/Irkutsk",
                                "Asia/Kuala_Lumpur",
                                "Asia/Taipei",
                                "Australia/Perth",
                                "Asia/Seoul",
                                "Asia/Tokyo",
                                "Asia/Yakutsk",
                                "Australia/Adelaide",
                                "Australia/Darwin",
                                "Asia/Vladivostok",
                                "Australia/Brisbane",
                                "Australia/Hobart",
                                "Australia/Sydney",
                                "Pacific/Guam",
                                "Pacific/Noumea",
                                "Pacific/Auckland",
                                "Pacific/Fiji",
                                "Pacific/Apia",
                                "Pacific/Tongatapu"
                            ]
                        },
                        "daylightSavingTime": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "reloadTask.create": {
            "type": "object",
            "description": "Create new reload task",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "reloadTask.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "appFilter"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "appFilter": {
                            "type": "string"
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "reloadTask.remove": {
            "type": "object",
            "description": "Remove reload task(s)",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "reloadTask.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the reload task(s0"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "reloadTask.update": {
            "type": "object",
            "description": "Update reload task(s) properties",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "reloadTask.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "taskSessionTimeout": {
                            "type": "integer"
                        },
                        "maxRetries": {
                            "type": "integer"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "appId": {
                            "type": "integer"
                        },
                        "appFilter": {
                            "type": "integer"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "options": {
                    "$ref": "#/definitions/UpdateExtraOptions"
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the reloadTask(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "serviceStatus.get": {
            "type": "object",
            "description": "Get status of service by service id",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "serviceStatus.get"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string"
                }
            }
        },
        "stream.create": {
            "type": "object",
            "description": "Create new stream",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "stream.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "stream.get": {
            "type": "object",
            "description": "Get instance of stream(s)",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "stream.get"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string"
                }
            }
        },
        "stream.remove": {
            "type": "object",
            "description": "Remove stream/streams",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "stream.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the stream"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "stream.update": {
            "type": "object",
            "description": "Update stream(s) properties",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "stream.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Value in format: CustomPropertyName=value"
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the stream(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "systemRule.create": {
            "type": "object",
            "description": "Create new system rule",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "systemRule.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "category",
                        "rule",
                        "resourceFilter"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "category": {
                            "type": "string",
                            "enum": [
                                "License",
                                "Security",
                                "Sync"
                            ]
                        },
                        "rule": {
                            "type": "string"
                        },
                        "resourceFilter": {
                            "type": "string"
                        },
                        "actions": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "None",
                                    "Create",
                                    "Read",
                                    "Update",
                                    "Delete",
                                    "Export",
                                    "Publish",
                                    "Change owner",
                                    "Change role",
                                    "Export data",
                                    "Offline access",
                                    "Distribute",
                                    "Duplicate",
                                    "Approve",
                                    "Allow access"
                                ]
                            }
                        },
                        "comment": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "systemRule.getAll": {
            "type": "object",
            "description": "Get instance of all systemRules",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "systemRule.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "systemRule": {
            "type": "object",
            "description": "Get instance of system rule/rules",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "systemRule.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "systemRule.licenseCreate": {
            "type": "object",
            "description": "Create new license rule",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "systemRule.licenseCreate"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "type",
                        "rule"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "Analyzer",
                                "Professional"
                            ]
                        },
                        "rule": {
                            "type": "string"
                        },
                        "comment": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "systemRule.remove": {
            "type": "object",
            "description": "Remove system rule",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "systemRule.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the system rule"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "systemRule.update": {
            "type": "object",
            "description": "Update system rule(s) properties",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "systemRule.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the system rule(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "tag.create": {
            "type": "object",
            "description": "Create new tag",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "tag.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "tag.createMany": {
            "type": "object",
            "description": "Create multiple new tag",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "tag.createMany"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "names"
                    ],
                    "properties": {
                        "names": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "tag.remove": {
            "type": "object",
            "description": "Remove tag(s)",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "tag.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the tag"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "tag.update": {
            "type": "object",
            "description": "Update tags(s) properties",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "tag.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the tag(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "task.get": {
            "type": "object",
            "description": "Get instance of task/tasks",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "task.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "task.getAll": {
            "type": "object",
            "description": "Get instance of all tasks",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "task.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "task.start": {
            "type": "object",
            "description": "Start task(s)",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "task.start"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the task(s) to start"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "task.startSynchronous": {
            "type": "object",
            "description": "Start task(s) synchronous",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "task.startSynchronous"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the task(s) to start"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "task.stop": {
            "type": "object",
            "description": "Stop task(s)",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "task.stop"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the task(s) to stop"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "user.create": {
            "type": "object",
            "description": "Create new user",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "user.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "userId",
                        "userDirectory"
                    ],
                    "properties": {
                        "userId": {
                            "type": "string"
                        },
                        "userDirectory": {
                            "type": "string"
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "name": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "user.get": {
            "type": "object",
            "description": "Get instance of user/users",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "user.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "user.getAll": {
            "type": "object",
            "description": "Get instance of all users",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "user.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "user.remove": {
            "type": "object",
            "description": "Remove user(s)",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "user.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the user"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "user.update": {
            "type": "object",
            "description": "Update user(s) properties",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "user.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Value in format: CustomPropertyName=value"
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the user(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "virtualProxy.create": {
            "type": "object",
            "description": "Create new virtual proxy",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "pattern": "^[^#]+$"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "virtualProxy.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "prefix",
                        "description",
                        "sessionCookieHeaderName"
                    ],
                    "properties": {
                        "prefix": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "sessionCookieHeaderName": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "authenticationModuleRedirectUri": {
                            "type": "string"
                        },
                        "windowsAuthenticationEnabledDevicePattern": {
                            "type": "string"
                        },
                        "loadBalancingServerNodes": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "websocketCrossOriginWhiteList": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "additionalResponseHeaders": {
                            "type": "string"
                        },
                        "anonymousAccessMode": {
                            "type": "string",
                            "enum": [
                                "No anonymous",
                                "Allow anonymous",
                                "Always anonymous"
                            ]
                        },
                        "authenticationMethod": {
                            "type": "string",
                            "enum": [
                                "Ticket",
                                "HeaderStaticUserDirectory",
                                "HeaderDynamicUserDirectory",
                                "static",
                                "dynamic",
                                "SAML",
                                "JWT"
                            ]
                        },
                        "hasSecureAttributeHttp": {
                            "type": "boolean"
                        },
                        "sameSiteAttributeHttp": {
                            "type": "string",
                            "enum": [
                                "No attribute",
                                "None",
                                "Lax",
                                "Strict"
                            ]
                        },
                        "hasSecureAttributeHttps": {
                            "type": "boolean"
                        },
                        "sameSiteAttributeHttps": {
                            "type": "string",
                            "enum": [
                                "No attribute",
                                "None",
                                "Lax",
                                "Strict"
                            ]
                        },
                        "headerAuthenticationHeaderName": {
                            "type": "string"
                        },
                        "extendedSecurityEnvironment": {
                            "type": "boolean"
                        },
                        "headerAuthenticationStaticUserDirectory": {
                            "type": "string"
                        },
                        "headerAuthenticationDynamicUserDirectory": {
                            "type": "string"
                        },
                        "samlMetadataIdP": {
                            "type": "string"
                        },
                        "samlHostUri": {
                            "type": "string"
                        },
                        "samlEntityId": {
                            "type": "string"
                        },
                        "samlAttributeUserId": {
                            "type": "string"
                        },
                        "samlAttributeUserDirectory": {
                            "type": "string"
                        },
                        "samlAttributeMap": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "samlSlo": {
                            "type": "boolean"
                        },
                        "jwtPublicKeyCertificate": {
                            "type": "string"
                        },
                        "jwtAttributeUserId": {
                            "type": "string"
                        },
                        "jwtAttributeUserDirectory": {
                            "type": "string"
                        },
                        "jwtAttributeMap": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "sessionInactivityTimeout": {
                            "type": "integer"
                        },
                        "oidcConfigurationEndpointUri": {
                            "type": "string"
                        },
                        "oidcClientId": {
                            "type": "string"
                        },
                        "oidcClientSecret": {
                            "type": "string"
                        },
                        "oidcRealm": {
                            "type": "string"
                        },
                        "oidcAttributeSub": {
                            "type": "string"
                        },
                        "oidcAttributeName": {
                            "type": "string"
                        },
                        "oidcAttributeGroups": {
                            "type": "string"
                        },
                        "oidcAttributeEmail": {
                            "type": "string"
                        },
                        "oidcAttributeClientId": {
                            "type": "string"
                        },
                        "oidcAttributePicture": {
                            "type": "string"
                        },
                        "oidcScope": {
                            "type": "string"
                        },
                        "oidcAttributeMap": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "virtualProxy.get": {
            "type": "object",
            "description": "Get instance of virtual proxy/proxies",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "virtualProxy.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "virtualProxy.getAll": {
            "type": "object",
            "description": "Get instance of all virtual proxies",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "virtualProxy.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                }
            }
        },
        "virtualProxy.remove": {
            "type": "object",
            "description": "Remove virtual proxy(ies",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "virtualProxy.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the virtual proxy"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "required": [
                        "filter"
                    ],
                    "not": {
                        "required": [
                            "source"
                        ]
                    }
                },
                {
                    "required": [
                        "source"
                    ],
                    "not": {
                        "required": [
                            "filter"
                        ]
                    }
                }
            ]
        },
        "virtualProxy.update": {
            "type": "object",
            "description": "Update virtual proxy",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "virtualProxy.update"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "options": {
                    "additionalProperties": false,
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "customPropertyOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "tagOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "appendTags": {
                            "type": "boolean"
                        },
                        "whitelistOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        }
                    }
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "prefix": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "sessionCookieHeaderName": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "authenticationModuleRedirectUri": {
                            "type": "string"
                        },
                        "windowsAuthenticationEnabledDevicePattern": {
                            "type": "string"
                        },
                        "loadBalancingServerNodes": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "websocketCrossOriginWhiteList": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "additionalResponseHeaders": {
                            "type": "string"
                        },
                        "anonymousAccessMode": {
                            "type": "string",
                            "enum": [
                                "No anonymous",
                                "Allow anonymous",
                                "Always anonymous"
                            ]
                        },
                        "authenticationMethod": {
                            "type": "string",
                            "enum": [
                                "Ticket",
                                "HeaderStaticUserDirectory",
                                "HeaderDynamicUserDirectory",
                                "static",
                                "dynamic",
                                "SAML",
                                "JWT"
                            ]
                        },
                        "hasSecureAttributeHttp": {
                            "type": "boolean"
                        },
                        "sameSiteAttributeHttp": {
                            "type": "string",
                            "enum": [
                                "No attribute",
                                "None",
                                "Lax",
                                "Strict"
                            ]
                        },
                        "hasSecureAttributeHttps": {
                            "type": "boolean"
                        },
                        "sameSiteAttributeHttps": {
                            "type": "string",
                            "enum": [
                                "No attribute",
                                "None",
                                "Lax",
                                "Strict"
                            ]
                        },
                        "headerAuthenticationHeaderName": {
                            "type": "string"
                        },
                        "extendedSecurityEnvironment": {
                            "type": "boolean"
                        },
                        "headerAuthenticationStaticUserDirectory": {
                            "type": "string"
                        },
                        "headerAuthenticationDynamicUserDirectory": {
                            "type": "string"
                        },
                        "samlMetadataIdP": {
                            "type": "string"
                        },
                        "samlHostUri": {
                            "type": "string"
                        },
                        "samlEntityId": {
                            "type": "string"
                        },
                        "samlAttributeUserId": {
                            "type": "string"
                        },
                        "samlAttributeUserDirectory": {
                            "type": "string"
                        },
                        "samlAttributeMap": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "samlSlo": {
                            "type": "boolean"
                        },
                        "jwtPublicKeyCertificate": {
                            "type": "string"
                        },
                        "jwtAttributeUserId": {
                            "type": "string"
                        },
                        "jwtAttributeUserDirectory": {
                            "type": "string"
                        },
                        "jwtAttributeMap": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "sessionInactivityTimeout": {
                            "type": "integer"
                        },
                        "oidcConfigurationEndpointUri": {
                            "type": "string"
                        },
                        "oidcClientId": {
                            "type": "string"
                        },
                        "oidcClientSecret": {
                            "type": "string"
                        },
                        "oidcRealm": {
                            "type": "string"
                        },
                        "oidcAttributeSub": {
                            "type": "string"
                        },
                        "oidcAttributeName": {
                            "type": "string"
                        },
                        "oidcAttributeGroups": {
                            "type": "string"
                        },
                        "oidcAttributeEmail": {
                            "type": "string"
                        },
                        "oidcAttributeClientId": {
                            "type": "string"
                        },
                        "oidcAttributePicture": {
                            "type": "string"
                        },
                        "oidcScope": {
                            "type": "string"
                        },
                        "oidcAttributeMap": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "AddRemoveSet": {
            "type": "string",
            "description": "set - replaces all existing values\nadd - append to the existing values\nremove - remove passed values",
            "enum": [
                "set",
                "add",
                "remove"
            ]
        },
        "UpdateExtraOptions": {
            "type": "object",
            "properties": {
                "multiple": {
                    "type": "boolean"
                },
                "customPropertyOperations": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "set"
                    ]
                },
                "tagOperations": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove",
                        "set"
                    ]
                }
            }
        }
    }
}